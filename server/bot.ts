import TelegramBot from 'node-telegram-bot-api';
import { storage } from './storage';
import { Product, CartItem, User } from '../shared/types';

export class Bot {
  private bot: TelegramBot;
  private adminIds: string[];
  private webAppUrl: string;

  constructor(
    token: string = '7075179069:AAGgtpcyrVilR0ttXFDhtfCfXfG0MqkhE3s',
    webAppUrl: string = 'https://esention-shop.onrender.com',
    adminIds: string[] = []
  ) {
    this.bot = new TelegramBot(token, { polling: true });
    this.adminIds = adminIds;
    this.webAppUrl = webAppUrl;
    this.setupHandlers();
  }

  public async getMe(): Promise<TelegramBot.User> {
    return this.bot.getMe();
  }

  private setupHandlers() {
    // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å Web App
    const mainMenuKeyboard = {
      keyboard: [
        [{ text: 'üè™ –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω', web_app: { url: this.webAppUrl } }],
        [{ text: 'üõí –ö–æ—Ä–∑–∏–Ω–∞' }, { text: 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã' }],
      ],
      resize_keyboard: true
    };

    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const welcomeMessage = `
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Esention Store! üõç

–í–∞—à –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω –æ–¥–µ–∂–¥—ã –≤ –ï–≤—Ä–æ–ø–µ:

‚Ä¢ –í—Å–µ —Ü–µ–Ω—ã –≤ –µ–≤—Ä–æ (‚Ç¨)
‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π –ï–≤—Ä–æ–ø–µ
‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏
‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω" —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∫—É–ø–∫–∏ üõç
`;

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
    this.bot.onText(/\/start/, async (msg) => {
      const chatId = msg.chat.id;
      
      // –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π Web App
      const inlineKeyboard = {
        inline_keyboard: [
          [{
            text: 'üè™ –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω',
            web_app: { url: this.webAppUrl }
          }]
        ]
      };

      await this.bot.sendMessage(chatId, welcomeMessage, {
        parse_mode: 'HTML',
        reply_markup: inlineKeyboard
      });

      // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      const user = await storage.getUserByTelegramId(chatId.toString());
      if (!user) {
        await storage.createUser({
          telegramId: chatId.toString(),
          username: msg.from?.username || '',
          firstName: msg.from?.first_name || '',
          lastName: msg.from?.last_name || ''
        });
      }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ—Ä–∑–∏–Ω—ã
    this.bot.onText(/üõí –ö–æ—Ä–∑–∏–Ω–∞/, async (msg) => {
      const chatId = msg.chat.id;
      const cartItems = await storage.getCartItems(chatId.toString());

      if (!cartItems || cartItems.length === 0) {
        const emptyCartKeyboard = {
          inline_keyboard: [
            [{
              text: 'üè™ –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω',
              web_app: { url: this.webAppUrl }
            }]
          ]
        };

        await this.bot.sendMessage(chatId, 'üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω', {
          reply_markup: emptyCartKeyboard
        });
        return;
      }

      let total = 0;
      let cartText = 'üõí <b>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:</b>\n\n';

      for (const item of cartItems) {
        const product = await storage.getProduct(item.productId);
        if (product) {
          const itemTotal = product.price * item.quantity;
          total += itemTotal;
          cartText += `${product.name}\n`;
          cartText += `${item.quantity} x ${product.price}‚Ç¨ = ${itemTotal}‚Ç¨\n\n`;
        }
      }

      cartText += `\nüí∞ <b>–ò—Ç–æ–≥–æ: ${total}‚Ç¨</b>`;

      const keyboard = {
        inline_keyboard: [
          [
            { text: 'üóë –û—á–∏—Å—Ç–∏—Ç—å', callback_data: 'clear_cart' },
            { text: '‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å', callback_data: 'checkout' }
          ],
          [{
            text: 'üè™ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–∞–≥–∞–∑–∏–Ω',
            web_app: { url: this.webAppUrl }
          }]
        ]
      };

      await this.bot.sendMessage(chatId, cartText, {
        parse_mode: 'HTML',
        reply_markup: keyboard
      });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    this.bot.onText(/üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã/, async (msg) => {
      const chatId = msg.chat.id;
      const contactsMessage = `
üìû <b>–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:</b>

üì± –¢–µ–ª–µ—Ñ–æ–Ω: +7 (999) 123-45-67
‚úâÔ∏è Email: support@esention.store
üåê –°–∞–π—Ç: www.esention.store
üìç –ê–¥—Ä–µ—Å: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 1

‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:
–ü–Ω-–ü—Ç: 10:00 - 20:00
–°–±-–í—Å: 11:00 - 18:00
`;

      const contactsKeyboard = {
        inline_keyboard: [
          [{
            text: 'üè™ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–∞–≥–∞–∑–∏–Ω',
            web_app: { url: this.webAppUrl }
          }]
        ]
      };

      await this.bot.sendMessage(chatId, contactsMessage, {
        parse_mode: 'HTML',
        reply_markup: contactsKeyboard
      });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
    this.bot.on('callback_query', async (query) => {
      if (!query.message) return;

      const chatId = query.message.chat.id;
      const data = query.data;

      if (data === 'clear_cart') {
        await storage.clearCart(chatId.toString());
        await this.bot.answerCallbackQuery(query.id, {
          text: 'üóë –ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞'
        });
        await this.bot.deleteMessage(chatId, query.message.message_id);
        
        const emptyCartKeyboard = {
          inline_keyboard: [
            [{
              text: 'üè™ –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω',
              web_app: { url: this.webAppUrl }
            }]
          ]
        };

        await this.bot.sendMessage(chatId, 'üõí –ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω', {
          reply_markup: emptyCartKeyboard
        });
      }
    });
  }

  private createProductCard(product: Product): string {
    return `
<b>${product.name}</b>
üí∞ <b>${product.price.toLocaleString('ru-RU')} ‚Ç¨</b>

${product.description || ''}

üì¶ –í –Ω–∞–ª–∏—á–∏–∏
üè∑ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${product.category}
`;
  }

  private isAdmin(userId: string): boolean {
    return this.adminIds.includes(userId);
  }
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º –Ω–∞–ø—Ä—è–º—É—é
export const bot = new Bot(
  '7075179069:AAGgtpcyrVilR0ttXFDhtfCfXfG0MqkhE3s',
  'https://esention-shop.onrender.com'
); 